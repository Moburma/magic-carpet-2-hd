name: MSBuild 32Bit CI Release

on: 
  push:
    branches:
      [ master, development ]
  pull_request:
      types: [opened, synchronize, reopened]
  workflow_dispatch:

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release
  BUILD_PLATFORM: x86
  BUILD_PLATFORM_SDL2: win32
  BUILD_PLATFORM_LIBOGG: win32
  BUILD_PLATFORM_LIBVORBIS: win32

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build sdl2 static dependency
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:PlatformTarget=${{env.BUILD_PLATFORM_SDL2}} /p:Platform=${{env.BUILD_PLATFORM_LIBOGG}} ${{env.SOLUTION_FILE_PATH}}/sdl2/VisualC/SDL.sln

    - name: Build libogg static dependency
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:PlatformTarget=${{env.BUILD_PLATFORM_LIBOGG}} /p:Platform=${{env.BUILD_PLATFORM_LIBOGG}} ${{env.SOLUTION_FILE_PATH}}/libogg/win32/VS2015/libogg_static.sln
    
    - name: Build libvorbis static dependency
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:PlatformTarget=${{env.BUILD_PLATFORM_LIBVORBIS}} /p:Platform=${{env.BUILD_PLATFORM_LIBVORBIS}} ${{env.SOLUTION_FILE_PATH}}/libvorbis/win32/VS2010/vorbis_static.sln
      
    - name: Build Release
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:PlatformTarget=${{env.BUILD_PLATFORM}} /p:Platform=${{env.BUILD_PLATFORM}} ${{env.SOLUTION_FILE_PATH}}/remc2.sln
      
    - name: Create Archive
      uses: thedoctor0/zip-release@main
      with:
        type: 'zip'
        filename: 'Release_$BUILD_ID.zip'
        directory: ${{env.GITHUB_WORKSPACE}}
        path: /Release
        exclusions: '*.lib *.exp'