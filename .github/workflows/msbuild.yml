name: MSBuild CI

on: 
  push:
    branches:
      [ master, development ]
  pull_request:
      types: [opened, synchronize, reopened]
  workflow_dispatch:

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        BUILD_CONFIGURATION: [Debug, Release]
        BUILD_PLATFORM: [x86, x64]

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build sdl2 static dependency
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild /m /p:Configuration=${{matrix.BUILD_CONFIGURATION}} /p:PlatformTarget=${{matrix.BUILD_PLATFORM}} /p:Platform=${{matrix.BUILD_PLATFORM}} ${{env.SOLUTION_FILE_PATH}}/sdl2/VisualC/SDL.sln

    - name: Build libogg static dependency
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild /m /p:Configuration=${{matrix.BUILD_CONFIGURATION}} /p:PlatformTarget=${{matrix.BUILD_PLATFORM}} /p:Platform=${{matrix.BUILD_PLATFORM}} ${{env.SOLUTION_FILE_PATH}}/libogg/win32/VS2015/libogg_static.sln
    
    - name: Build libvorbis static dependency
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild /m /p:Configuration=${{matrix.BUILD_CONFIGURATION}} /p:PlatformTarget=${{matrix.BUILD_PLATFORM}} /p:Platform=${{matrix.BUILD_PLATFORM}} ${{env.SOLUTION_FILE_PATH}}/libvorbis/win32/VS2010/vorbis_static.sln

    - name: Build ${{matrix.BUILD_CONFIGURATION}}
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild /m /p:Configuration=${{matrix.BUILD_CONFIGURATION}} /p:PlatformTarget=${{matrix.BUILD_PLATFORM}} /p:Platform=${{matrix.BUILD_PLATFORM}} ${{env.SOLUTION_FILE_PATH}}/remc2.sln

    - name: Run Unit Tests
      if: ${{matrix.BUILD_CONFIGURATION}} == 'Debug' && ${{matrix.BUILD_PLATFORM}} == 'x86'
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: ${{env.SOLUTION_FILE_PATH}}/${{matrix.BUILD_CONFIGURATION}}/remc2-unit-test.exe
      
    - name: Run Unit Tests
      if: ${{matrix.BUILD_CONFIGURATION}} == 'Debug' && ${{matrix.BUILD_PLATFORM}} == 'x64'
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: ${{env.SOLUTION_FILE_PATH}}/${{matrix.BUILD_PLATFORM}}/${{matrix.BUILD_CONFIGURATION}}/remc2-unit-test.exe
      
    - name: Create Archive x86
      if: ${{matrix.BUILD_CONFIGURATION}} == 'Release' && ${{matrix.BUILD_PLATFORM}} == 'x86'
      uses: thedoctor0/zip-release@main
      with:
        type: 'zip'
        filename: 'remc2_x86_${{BUILD_ID}}.zip'
        directory: ${{env.GITHUB_WORKSPACE}}
        path: /Release
        exclusions: '*.lib *.exp'
        
    - name: Create Archive x64
      if: ${{matrix.BUILD_CONFIGURATION}} == 'Release' && ${{matrix.BUILD_PLATFORM}} == 'x64'
      uses: thedoctor0/zip-release@main
      with:
        type: 'zip'
        filename: 'remc2_x64_${{BUILD_ID}.zip'
        directory: ${{env.GITHUB_WORKSPACE}}
        path: ${{matrix.BUILD_PLATFORM}}/Release
        exclusions: '*.lib *.exp'